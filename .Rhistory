system.time({
future({
lapply(1:100, function(x){
read.csv('testFile.csv')
})
}) %>% value()
})
system.time({
map(1:100, function(x){
read.csv('testFile.csv')
})
})
library(purrr)
system.time({
map(1:100, function(x){
read.csv('testFile.csv')
})
})
system.time({
future({
lapply(1:500, function(x){
read.csv('testFile.csv')
})
}) %>% value()
})
system.time({
map(1:500, function(x){
read.csv('testFile.csv')
})
})
system.time({
lapply(1:500, function(x){
read.csv('testFile.csv')
})
})
system.time({
for(i in 1:500){
read.csv('testFile.csv')
}
})
system.time({
future_map(1:100, function(x){read.csv('testFile.csv')})
})
library(furrr)
system.time({
future_map(1:100, function(x){read.csv('testFile.csv')})
})
library(future.apply)
system.time({
future_lapply(1:100, function(x){read.csv('testFile.csv')})
})
system.time({
future_map(1:500, function(x){read.csv('testFile.csv')})
})
library(future.apply)
system.time({
future_lapply(1:500, function(x){read.csv('testFile.csv')})
})
blogdown::serve_site()
blogdown::stop_server()
basic_set()
blogdown::serve_site()
basic_set()
system.time({
for(i in 1:500){
future({
read.csv('testFile.csv')
})
}
})
system.time({
for(i in 1:500){
future({
read.csv('testFile.csv')
}) %>% value()
}
})
# future문
library(listenv)
t5 <- listenv()
t5 <- listenv()
system.time({
for(i in 1:500){
t5[[i]] <-  future( read.csv('testFile.csv') )
}
})
t5
t5 %>% unlist()
value(t5)
t4
t4[1]
t4
t4 %>% as.data.frame()
as.list(t4)
as.list(t5)
t5 <- listenv()
system.time({
for(i in 1:500){
t5[[i]] <-  future( read.csv('testFile.csv') ) %>% value()
}
})
t5
t5 %>% as.list()
?AirPassengers
bbasic_set()
basic_set()
testdata <- lapply(test_range, function(x){
AirPassengers + sample(144)
}) %>%
as.data.frame() %>%
rename_with(~paste0('air', test_range)) %>%
ts(frequency = 12, start = 1949)
glimpse(testdata)
testdata <- lapply(test_range, function(x){
AirPassengers + sample(144)
}) %>%
as.data.frame() %>%
rename_with(~paste0('air', test_range))
glimpse(testdata)
testdata <- lapply(test_range, function(x){
AirPassengers + sample(144)
}) %>%
as.data.frame() %>%
rename_with(~paste0('air', test_range))
glimpse(testdata)
i = 0
t1 <- list()
for(i in seq(1, ncol(testdata))){
print(i)
t1[[i]] <- testdata[, i] %>% auto.arima()
}
toc()
testdata <- testdata %>% ts(frequency = 12, start = 1949)
tic()
i = 0
t1 <- list()
for(i in seq(1, ncol(testdata))){
print(i)
t1[[i]] <- testdata[, i] %>% auto.arima()
}
toc()
# 다시
test_range <- 1:50
testdata <- lapply(test_range, function(x){
AirPassengers + sample(144)
}) %>%
as.data.frame() %>%
rename_with(~paste0('air', test_range))
glimpse(testdata)
testdata <- testdata %>% ts(frequency = 12, start = 1949)
list(
# For문
forLoop = system.time({
for(i in seq(1, ncol(testdata))){
testdata[, i] %>% auto.arima()
}
}),
# lapply문
lapply = system.time({
testdata %>% lapply(auto.arima)
}),
# sapply문
sapply = system.time({
testdata %>% sapply(auto.arima)
}),
# `future` For문
future_forLoop = system.time({
for(i in seq(1, ncol(testdata))){
future({
testdata[, i] %>% auto.arima()
})
}
}),
# future_lapply문
future_lapply = system.time({
testdata %>% future_lapply(auto.arima)
}),
# future_map문
future_map = system.time({
testdata %>% future_map(auto.arima)
}),
# apply문
apply = testdata %>% apply(2, auto.arim)
)
modeling_speed_test <- list(
# For문
forLoop = system.time({
for(i in seq(1, ncol(testdata))){
testdata[, i] %>% auto.arima()
}
}),
# lapply문
lapply = system.time({
testdata %>% lapply(auto.arima)
}),
# sapply문
sapply = system.time({
testdata %>% sapply(auto.arima)
}),
# `future` For문
future_forLoop = system.time({
for(i in seq(1, ncol(testdata))){
future({
testdata[, i] %>% auto.arima()
})
}
}),
# future_lapply문
future_lapply = system.time({
testdata %>% future_lapply(auto.arima)
}),
# future_map문
future_map = system.time({
testdata %>% future_map(auto.arima)
}),
# apply문
apply = system.time({
testdata %>% apply(2, auto.arim)
})
)
modeling_speed_test
modeling_speed_test <- list()
system.time({
for(i in seq(1, ncol(testdata))){
testdata[, i] %>% auto.arima()
}
})
lapply = system.time({
testdata %>% lapply(auto.arima)
})
basic_set()
lapply = system.time({
testdata %>% lapply(auto.arima)
})
blogdown::serve_site()
basic_set()
# 다시
test_range <- 1:50
testdata <- lapply(test_range, function(x){
AirPassengers + sample(144)
}) %>%
as.data.frame() %>%
rename_with(~paste0('air', test_range))
glimpse(testdata)
testdata <- testdata %>% ts(frequency = 12, start = 1949)
system.time({
testdata %>% apply(2, auto.arim)
})
system.time({
testdata %>% apply(2, auto.arima)
})
system.time({
testdata %>% future_map(auto.arima)
})
library(furrr)
library(future.apply)
system.time({
testdata %>% future_map(auto.arima)
})
system.time({
testdata %>% future_lapply(auto.arima)
})
future_lapply = system.time({
testdata %>% future_lapply(function(x){auto.arima(x)})
})
# 다시
test_range <- 1:3
testdata <- lapply(test_range, function(x){
AirPassengers + sample(144)
}) %>%
as.data.frame() %>%
rename_with(~paste0('air', test_range))
glimpse(testdata)
testdata <- testdata %>% ts(frequency = 12, start = 1949)
testdata
testdata %>% lapply(auto.arima)
system.time({
testdata %>% lapply(auto.arima)
})
# 다시
test_range <- 1:10
testdata <- lapply(test_range, function(x){
AirPassengers + sample(144)
}) %>%
as.data.frame() %>%
rename_with(~paste0('air', test_range))
glimpse(testdata)
testdata <- testdata %>% ts(frequency = 12, start = 1949)
system.time({
for(i in seq(1, ncol(testdata))){
testdata[, i] %>% auto.arima()
}
})
apply = system.time({
testdata %>% apply(2, auto.arima)
})
system.time({
testdata %>% apply(2, auto.arima)
})
system.time({
testdata %>% future_map(auto.arima)
})
reset()
basic_set()
system.time({
testdata %>% future_map(auto.arima)
})
system.time({
testdata %>% future_lapply(auto.arima)
})
reset
plan(multisession, gc = T)
reset()
basic_set()
system.time({
for(i in seq(1, ncol(testdata))){
future({
testdata[, i] %>% auto.arima()
})
}
})
reset()
basic_set()
testdata
modeling_speed_test <- list()
modeling_speed_test <- list(
# For문
forLoop = system.time({
for(i in seq(1, ncol(testdata))){
testdata[, i] %>% auto.arima()
}
}),
# lapply문
lapply = system.time({
testdata %>% lapply(auto.arima)
}),
# sapply문
sapply = system.time({
testdata %>% sapply(auto.arima)
}),
# `future` For문
future_forLoop = system.time({
for(i in seq(1, ncol(testdata))){
future({
testdata[, i] %>% auto.arima()
})
}
}),
# future_lapply문
future_lapply = system.time({
testdata %>% future_lapply(auto.arima)
}),
# future_map문
future_map = system.time({
testdata %>% future_map(auto.arima)
}),
# apply문
apply = system.time({
testdata %>% apply(2, auto.arima)
})
)
modeling_speed_test
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
basic_set()
# 속도 측정용 데이터 생성
test_range <- 1:500
testdata <- lapply(test_range, function(x){
AirPassengers + sample(144)
}) %>%
as.data.frame() %>%
rename_with(~paste0('air', test_range))
testdata <- lapply(test_range, function(x){
AirPassengers + sample(144)
}) %>%
as.data.frame() %>%
rename_with(~paste0('air', test_range)) %>%
ts(frequency = 12, start = 1949)
glimpse(testdata)
# 속도 측정용 데이터 생성
test_range <- 1:100
testdata <- lapply(test_range, function(x){
AirPassengers + sample(144)
}) %>%
as.data.frame() %>%
rename_with(~paste0('air', test_range)) %>%
ts(frequency = 12, start = 1949)
glimpse(testdata)
list(
# future_map문
future_map = system.time({
testdata %>% future_map(auto.arima)
}),
# apply문
apply = system.time({
testdata %>% apply(2, auto.arima)
})
)
# 02/06 ----
basic_set <- function(){
library(dplyr)
library(purrr)
library(future)
library(future.apply)
library(furrr)
library(microbenchmark)
library(ggplot2)
library(forecast)
plan(multisession, workers = 10)
}
basic_set()
list(
# future_map문
future_map = system.time({
testdata %>% future_map(auto.arima)
}),
# apply문
apply = system.time({
testdata %>% apply(2, auto.arima)
})
)
# 속도 측정용 데이터 생성
test_range <- 1:500
testdata <- lapply(test_range, function(x){
AirPassengers + sample(144)
}) %>%
as.data.frame() %>%
rename_with(~paste0('air', test_range)) %>%
ts(frequency = 12, start = 1949)
glimpse(testdata)
reset()
basic_set()
list(
# future_map문
future_map = system.time({
testdata %>% future_map(auto.arima)
}),
# apply문
apply = system.time({
testdata %>% apply(2, auto.arima)
})
)
system.time({
testdata %>% future_apply(2, auto.arima)
})
blogdown::serve_site()
blogdown::serve_site()
library(future)
plan(multiprogress, workers = 8)
plan(multiprocess, workers = 8)
# 02/08 ----
# basic_set
basic_set <- function(){
library(dplyr)
library(purrr)
library(future)
library(microbenchmark)
library(tictoc)
library(future.apply)
library(ggplot2)
library(forecast)
plan(multiprocess, workers = 8)
}
basic_set()
# 속도 측정용 데이터 생성
test_range <- 1:10
testdata <- lapply(test_range, function(x){
AirPassengers + sample(144)
}) %>%
as.data.frame() %>%
rename_with(~paste0('air', test_range)) %>%
ts(frequency = 12, start = 1949)
temp1 <- list(
# future_map문
future_map = system.time({
testdata %>% future_map(auto.arima)
}),
# apply문
apply = system.time({
testdata %>% apply(2, auto.arima)
})
)
# 02/06 ----
basic_set <- function(){
library(dplyr)
library(purrr)
library(future)
library(future.apply)
library(furrr)
library(microbenchmark)
library(ggplot2)
library(forecast)
plan(multisession, workers = 10)
}
basic_set()
temp1 <- list(
# future_map문
future_map = system.time({
testdata %>% future_map(auto.arima)
}),
# apply문
apply = system.time({
testdata %>% apply(2, auto.arima)
})
)
temp1
temp1$future_map
temp1$future_map['elapsed']
temp1$future_map['elapsed'] %>% as.numeric()
text1 <- '12'
blogdown::serve_site()
